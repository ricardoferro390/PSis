/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ProtoBuffers.proto */

#ifndef PROTOBUF_C_ProtoBuffers_2eproto__INCLUDED
#define PROTOBUF_C_ProtoBuffers_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _PreBuff PreBuff;
typedef struct _LoginBuff LoginBuff;


/* --- enums --- */


/* --- messages --- */

struct  _PreBuff
{
  ProtobufCMessage base;
  int32_t type;
  int32_t size;
};
#define PRE_BUFF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pre_buff__descriptor) \
    , 0, 0 }


struct  _LoginBuff
{
  ProtobufCMessage base;
  int32_t type;
  char *username;
};
#define LOGIN_BUFF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_buff__descriptor) \
    , 0, NULL }


/* PreBuff methods */
void   pre_buff__init
                     (PreBuff         *message);
size_t pre_buff__get_packed_size
                     (const PreBuff   *message);
size_t pre_buff__pack
                     (const PreBuff   *message,
                      uint8_t             *out);
size_t pre_buff__pack_to_buffer
                     (const PreBuff   *message,
                      ProtobufCBuffer     *buffer);
PreBuff *
       pre_buff__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pre_buff__free_unpacked
                     (PreBuff *message,
                      ProtobufCAllocator *allocator);
/* LoginBuff methods */
void   login_buff__init
                     (LoginBuff         *message);
size_t login_buff__get_packed_size
                     (const LoginBuff   *message);
size_t login_buff__pack
                     (const LoginBuff   *message,
                      uint8_t             *out);
size_t login_buff__pack_to_buffer
                     (const LoginBuff   *message,
                      ProtobufCBuffer     *buffer);
LoginBuff *
       login_buff__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_buff__free_unpacked
                     (LoginBuff *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PreBuff_Closure)
                 (const PreBuff *message,
                  void *closure_data);
typedef void (*LoginBuff_Closure)
                 (const LoginBuff *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor pre_buff__descriptor;
extern const ProtobufCMessageDescriptor login_buff__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ProtoBuffers_2eproto__INCLUDED */
